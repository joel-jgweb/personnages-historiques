<?php

// --- DEBOGAGE TEMPORAIRE (À RETIRER EN PRODUCTION !) ---
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
// --------------------------------------------------------



// modifier_fiche.php - Modification avec éditeur restreint et saisie structurée pour les tableaux
session_start();
if (!isset($_SESSION['user_id'])) {
    header("Location: login.php");
    exit;
}

require_once 'permissions.php';
// Autorise : Rédacteur Fiches (3), Administrateur Fiches (2), Super-Administrateur (1), Administrateur Simple (6)
checkUserPermission([1, 2, 3, 6]);


require_once '../config.php';
$dbPath = __DIR__ . '/../../data/portraits.sqlite';
$message = '';
$fiche = null;
$resultats = [];
$recherche_effectuee = false;

try {
    $pdo = new PDO("sqlite:$dbPath");
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die("❌ Erreur de connexion à la base de données : " . $e->getMessage());
}

// Action : Rechercher une fiche
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'rechercher') {
    $recherche_effectuee = true;
    $recherche = trim($_POST['recherche'] ?? '');
    if (empty($recherche)) {
        $message = "<div class='alert alert-warning'>Veuillez entrer un nom ou un ID.</div>";
    } else {
        $stmt = null;
        if (is_numeric($recherche)) {
            $stmt = $pdo->prepare("SELECT * FROM personnages WHERE ID_fiche = ?");
            $stmt->execute([$recherche]);
            $fiche = $stmt->fetch(PDO::FETCH_ASSOC);
            if (!$fiche) {
                $message = "<div class='alert alert-info'>Aucune fiche trouvée pour l'ID '$recherche'.</div>";
            }
        } else {
            $stmt = $pdo->prepare("SELECT ID_fiche, Nom, Metier, Engagements FROM personnages WHERE Nom LIKE ? ORDER BY Nom ASC");
            $stmt->execute(["%$recherche%"]);
            $resultats = $stmt->fetchAll(PDO::FETCH_ASSOC);
            if (empty($resultats)) {
                $message = "<div class='alert alert-info'>Aucune fiche trouvée pour '$recherche'.</div>";
            } elseif (count($resultats) == 1) {
                $fiche_id = $resultats[0]['ID_fiche'];
                $stmt = $pdo->prepare("SELECT * FROM personnages WHERE ID_fiche = ?");
                $stmt->execute([$fiche_id]);
                $fiche = $stmt->fetch(PDO::FETCH_ASSOC);
            }
        }
    }
}

// Action : Charger une fiche spécifique depuis la liste
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'charger_fiche') {
    $fiche_id = $_POST['fiche_id'] ?? null;
    if ($fiche_id) {
        $stmt = $pdo->prepare("SELECT * FROM personnages WHERE ID_fiche = ?");
        $stmt->execute([$fiche_id]);
        $fiche = $stmt->fetch(PDO::FETCH_ASSOC);
        if (!$fiche) {
            $message = "<div class='alert alert-warning'>Fiche non trouvée.</div>";
        }
    }
}

// Action : Modifier une fiche existante
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'modifier') {
    $id_fiche = $_POST['ID_fiche'] ?? null;
    if ($id_fiche) {
        $nom = $_POST['Nom'] ?? '';
        $metier = $_POST['Metier'] ?? '';
        $engagements = $_POST['Engagements'] ?? '';
        $details = $_POST['Details'] ?? '';
        $sources = $_POST['Sources'] ?? '';
        $donnees_genealogiques = $_POST['Donnees_genealogiques'] ?? '';
        $photo = $_POST['Photo'] ?? '';
        $est_en_ligne = $_POST['est_en_ligne'] ?? '0';
        $auteur = $_POST['auteur'] ?? '';

      // --- Génération du tableau pour Iconographie ---
$icono_descs = $_POST['iconographie_description'] ?? [];
$icono_links = $_POST['iconographie_lien'] ?? [];
$iconographie = '';

if (!empty($icono_descs)) {
    $iconographie_lines = ["| Description | Télécharger |", "|-------------|-------------|"];
    foreach ($icono_descs as $i => $desc) {
        if (!empty($desc) || !empty($icono_links[$i])) {
            $desc_clean = str_replace(['|', "\n"], '', $desc);
            $link_clean = str_replace(['|', "\n"], '', $icono_links[$i]);
            $link_markdown = urlToMarkdownLink($link_clean, 'Télécharger');
            $iconographie_lines[] = "| $desc_clean | $link_markdown |";
        }
    }
    if (count($iconographie_lines) > 2) {
        $iconographie = implode("\n", $iconographie_lines);
    }
}
   // --- Génération du tableau pour Documents ---
$doc_descs = $_POST['documents_description'] ?? [];
$doc_links = $_POST['documents_lien'] ?? [];
$documents = ''; // Valeur par défaut : champ vide

// Ne générer le tableau que s'il y a au moins une description ou un lien
if (!empty($doc_descs)) {
    $documents_lines = ["| Description | Télécharger |", "|-------------|-------------|"];
    foreach ($doc_descs as $i => $desc) {
        $link = $doc_links[$i] ?? '';
        // Ne pas ajouter de ligne si les deux champs sont vides
        if (empty($desc) && empty($link)) {
            continue;
        }
        // Nettoyer les caractères interdits dans un tableau Markdown
        $desc_clean = str_replace(['|', "\n"], '', $desc);
        $link_clean = str_replace(['|', "\n"], '', $link);
        
        // Transformer une URL brute en lien Markdown [Télécharger](url)
        if (!empty($link_clean) && filter_var($link_clean, FILTER_VALIDATE_URL)) {
            $link_markdown = "[Télécharger]($link_clean)";
        } else {
            // Si ce n'est pas une URL valide, garder le texte tel quel (ou vide)
            $link_markdown = $link_clean;
        }
        
        $documents_lines[] = "| $desc_clean | $link_markdown |";
    }
    // Ne sauvegarder le tableau que s'il contient au moins une ligne de données (au-delà de l'en-tête)
    if (count($documents_lines) > 2) {
        $documents = implode("\n", $documents_lines);
    }
}

        // --- Gestion des métadonnées ---
        $derniere_modif = date('Y-m-d H:i:s');
        $valideur = ($est_en_ligne == '1') ? $_SESSION['user_login'] : null;

        $sql = "UPDATE personnages SET 
                    Nom = ?, Metier = ?, Engagements = ?, Details = ?, Sources = ?, 
                    Donnees_genealogiques = ?, Iconographie = ?, Photo = ?, Documents = ?,
                    est_en_ligne = ?, auteur = ?, valideur = ?, derniere_modif = ?
                WHERE ID_fiche = ?";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([
            $nom, $metier, $engagements, $details, $sources,
            $donnees_genealogiques, $iconographie, $photo, $documents,
            $est_en_ligne, $auteur, $valideur, $derniere_modif, $id_fiche
        ]);
        $message = "<div class='alert alert-success'>✅ Fiche modifiée avec succès !</div>";
        $stmt = $pdo->prepare("SELECT * FROM personnages WHERE ID_fiche = ?");
        $stmt->execute([$id_fiche]);
        $fiche = $stmt->fetch(PDO::FETCH_ASSOC);
    }
}
?>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Modifier une fiche personnage</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/admin/js/simplemde/simplemde.min.css">
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background-color: #f9f9f9; }
        .container { max-width: 900px; margin: auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); position: relative; }
        h1 { text-align: center; color: #333; }
        label { font-weight: bold; display: block; margin-top: 15px; }
        input[type="text"], textarea, select { width: 100%; padding: 8px; margin-top: 5px; border: 1px solid #ccc; border-radius: 4px; }
        textarea { height: 100px; resize: vertical; }
        button { background-color: #007BFF; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; margin-top: 20px; }
        button:hover { background-color: #0056b3; }
        .alert { padding: 10px; margin: 20px 0; border-radius: 4px; }
        .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .alert-warning { background-color: #fff3cd; color: #856404; border: 1px solid #ffeaa7; }
        .alert-info { background-color: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }
        .form-group { margin-bottom: 15px; }
        .btn-download {
            position: absolute;
            top: 20px;
            right: 20px;
            background-color: #dc3545;
            color: white;
            padding: 10px 15px;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }
        .btn-download:hover {
            background-color: #c82333;
            text-decoration: none;
        }
        .results-list {
            margin: 2rem 0;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 8px;
        }
        .result-item {
            padding: 1rem;
            margin-bottom: 0.5rem;
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .result-item button {
            margin: 0;
            padding: 8px 15px;
        }
        .result-meta {
            font-size: 0.9rem;
            color: #6c757d;
        }
        .info-text {
            font-size: 0.9em;
            color: #6c757d;
            margin-top: 0.5rem;
        }
        .resource-pair {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }
        .resource-pair input {
            flex: 1;
        }
        .btn-add {
            background: #17a2b8;
            padding: 5px 10px;
            font-size: 0.9rem;
        }
        .btn-remove {
            background: #dc3545;
            padding: 5px 10px;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <a href="download_db.php" class="btn-download">📥 Télécharger la base</a>
        <h1>🔍 Rechercher et Modifier une Fiche</h1>
        <?php if ($message): ?>
            <?= $message ?>
        <?php endif; ?>

        <form method="POST" action="">
            <input type="hidden" name="action" value="rechercher">
            <div class="form-group">
                <label for="recherche">Rechercher par Nom ou ID_fiche :</label>
                <input type="text" name="recherche" id="recherche" placeholder="Ex: Jean Dupont ou 123" required>
            </div>
            <button type="submit">Rechercher</button>
        </form>

        <?php if (!empty($resultats) && count($resultats) > 1): ?>
            <div class="results-list">
                <h2>📋 Plusieurs fiches trouvées (<?= count($resultats) ?>)</h2>
                <p>Veuillez sélectionner la fiche que vous souhaitez modifier :</p>
                <?php foreach ($resultats as $result): ?>
                    <div class="result-item">
                        <div>
                            <strong><?= htmlspecialchars($result['Nom']) ?></strong><br>
                            <span class="result-meta">
                                ID: <?= $result['ID_fiche'] ?> • 
                                <?= !empty($result['Metier']) ? htmlspecialchars($result['Metier']) : '—' ?> • 
                                <?= !empty($result['Engagements']) ? htmlspecialchars($result['Engagements']) : '—' ?>
                            </span>
                        </div>
                        <form method="POST" action="" style="display: inline;">
                            <input type="hidden" name="action" value="charger_fiche">
                            <input type="hidden" name="fiche_id" value="<?= $result['ID_fiche'] ?>">
                            <button type="submit">Modifier</button>
                        </form>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>

        <?php if ($fiche): ?>
            <hr>
            <h2>📝 Modification de la fiche #<?= htmlspecialchars($fiche['ID_fiche']) ?></h2>
            <form method="POST" action="">
                <input type="hidden" name="action" value="modifier">
                <input type="hidden" name="ID_fiche" value="<?= htmlspecialchars($fiche['ID_fiche']) ?>">
                <div class="form-group">
                    <label for="Nom">Nom :</label>
                    <input type="text" name="Nom" id="Nom" value="<?= htmlspecialchars($fiche['Nom'] ?? '') ?>" required>
                </div>
                <div class="form-group">
                    <label for="Metier">Métier :</label>
                    <textarea name="Metier" id="Metier"><?= htmlspecialchars($fiche['Metier'] ?? '') ?></textarea>
                </div>
                <div class="form-group">
                    <label for="Engagements">Engagements :</label>
                    <textarea name="Engagements" id="Engagements"><?= htmlspecialchars($fiche['Engagements'] ?? '') ?></textarea>
                </div>
                <div class="form-group">
                    <label for="Details">Détails :</label>
                    <textarea name="Details" id="Details"><?= htmlspecialchars($fiche['Details'] ?? '') ?></textarea>
                </div>
                <div class="form-group">
                    <label for="Sources">Sources :</label>
                    <textarea name="Sources" id="Sources"><?= htmlspecialchars($fiche['Sources'] ?? '') ?></textarea>
                </div>
                <div class="form-group">
                    <label for="Donnees_genealogiques">Données généalogiques :</label>
                    <textarea name="Donnees_genealogiques" id="Donnees_genealogiques"><?= htmlspecialchars($fiche['Donnees_genealogiques'] ?? '') ?></textarea>
                </div>

                <!-- Section Iconographie -->
                <div class="form-group">
                    <label>Iconographie</label>
                    <div id="iconographie-container">
                        <?php
                        // Parser le tableau Markdown existant
                        $icono_lines = explode("\n", trim($fiche['Iconographie']));
                        for ($i = 2; $i < count($icono_lines); $i++) {
                            $line = trim($icono_lines[$i]);
                            if (preg_match('/^\|\s*(.*?)\s*\|\s*(.*?)\s*\|$/', $line, $matches)) {
                                echo '<div class="resource-pair">';
                                echo '<input type="text" name="iconographie_description[]" value="' . htmlspecialchars($matches[1]) . '" placeholder="Description" required>';
                                echo '<input type="url" name="iconographie_lien[]" value="' . htmlspecialchars($matches[2]) . '" placeholder="https://...">';
                                echo '<button type="button" class="btn-remove" onclick="this.parentElement.remove()">🗑️</button>';
                                echo '</div>';
                            }
                        }
                        ?>
                    </div>
                    <button type="button" class="btn-add" onclick="addResourcePair('iconographie')">➕ Ajouter une ligne</button>
                </div>

                <!-- Section Documents -->
                <div class="form-group">
                    <label>Documents</label>
                    <div id="documents-container">
                        <?php
                        // Parser le tableau Markdown existant
                        $doc_lines = explode("\n", trim($fiche['Documents']));
                        for ($i = 2; $i < count($doc_lines); $i++) {
                            $line = trim($doc_lines[$i]);
                            if (preg_match('/^\|\s*(.*?)\s*\|\s*(.*?)\s*\|$/', $line, $matches)) {
                                echo '<div class="resource-pair">';
                                echo '<input type="text" name="documents_description[]" value="' . htmlspecialchars($matches[1]) . '" placeholder="Description" required>';
                                echo '<input type="url" name="documents_lien[]" value="' . htmlspecialchars($matches[2]) . '" placeholder="https://...">';
                                echo '<button type="button" class="btn-remove" onclick="this.parentElement.remove()">🗑️</button>';
                                echo '</div>';
                            }
                        }
                        ?>
                    </div>
                    <button type="button" class="btn-add" onclick="addResourcePair('documents')">➕ Ajouter une ligne</button>
                </div>

                <div class="form-group">
                    <label for="Photo">Photo (URL ou chemin relatif) :</label>
                    <input type="text" name="Photo" id="Photo" value="<?= htmlspecialchars($fiche['Photo'] ?? '') ?>">
                </div>

                <div class="form-group">
                    <label for="auteur">Auteur :</label>
                    <input type="text" name="auteur" id="auteur" value="<?= htmlspecialchars($fiche['auteur'] ?? $_SESSION['user_login']) ?>">
                </div>

                <div class="form-group">
                    <label for="est_en_ligne">Statut de publication :</label>
                    <?php
                    $roles_autorises = [1, 2, 4, 6];
                    $peut_modifier = in_array($_SESSION['user_statut'], $roles_autorises);
                    $valeur_actuelle = $fiche['est_en_ligne'] ?? '0';
                    ?>
                    <select name="est_en_ligne" id="est_en_ligne" <?= $peut_modifier ? '' : 'disabled title="Seuls les valideurs et administrateurs peuvent publier."' ?>>
                        <option value="0" <?= ($valeur_actuelle == 0) ? 'selected' : '' ?>>🔴 Hors ligne (brouillon)</option>
                        <option value="1" <?= ($valeur_actuelle == 1) ? 'selected' : '' ?>>✅ En ligne (publique)</option>
                    </select>
                    <?php if (!$peut_modifier): ?>
                        <input type="hidden" name="est_en_ligne" value="<?= $valeur_actuelle ?>">
                        <p class="info-text"><em>ℹ️ Seuls les valideurs et administrateurs peuvent publier une fiche.</em></p>
                    <?php endif; ?>
                </div>

                <button type="submit">💾 Enregistrer les modifications</button>
            </form>
        <?php elseif ($recherche_effectuee && empty($resultats) && !$fiche): ?>
            <p>Aucune fiche à afficher.</p>
        <?php endif; ?>
    </div>

    <script src="/admin/js/simplemde/simplemde.min.js"></script>
    <script>
        // Initialiser SimpleMDE en mode restreint
        const simplemdeDetails = new SimpleMDE({
            element: document.getElementById("Details"),
            toolbar: ["bold", "italic", "link"],
            spellChecker: false,
            status: false
        });
        const simplemdeSources = new SimpleMDE({
            element: document.getElementById("Sources"),
            toolbar: ["bold", "italic", "link"],
            spellChecker: false,
            status: false
        });

        // Gestion dynamique des ressources
        function addResourcePair(type) {
            const container = document.getElementById(type + '-container');
            const div = document.createElement('div');
            div.className = 'resource-pair';
            div.innerHTML = `
                <input type="text" name="${type}_description[]" placeholder="Description" required>
                <input type="url" name="${type}_lien[]" placeholder="https://...">
                <button type="button" class="btn-remove" onclick="this.parentElement.remove()">🗑️</button>
            `;
            container.appendChild(div);
        }
    </script>
</body>
</html>